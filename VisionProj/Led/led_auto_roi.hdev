<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.1.1">
<procedure name="main">
<interface/>
<body>
<c>** eg1.0 选取黄色线条样例// OK</c>
<c></c>
<l>* dev_close_window ()</l>
<l>* dev_open_window (0, 0, 640, 480, 'black', WindowHandle)</l>
<l>* for i := 1 to 2 by 1</l>
<l>*     read_image (Image, 'cable' + i)</l>
<l>*     decompose3 (Image, Red, Green, Blue)</l>
<l>*     trans_from_rgb (Red, Green, Blue, Hue, Saturation, Intensity, 'hsv')</l>
<c>    *对饱和度图像进行二值化</c>
<l>*     threshold (Saturation, HighSaturation, 100, 255)</l>
<c>    *在色调图像中抠图</c>
<l>*     reduce_domain (Hue, HighSaturation, HueHighSaturation)</l>
<l>*     threshold (HueHighSaturation, Yellow, 20, 50)</l>
<l>*     connection (Yellow, ConnectedRegions)</l>
<c>    *根据形状选择，‘max_area’为选择面积最大的连通域</c>
<l>*     select_shape_std (ConnectedRegions, SelectedRegions, 'max_area', 70)</l>
<l>*     closing_circle (SelectedRegions, Yellow, 3.5)</l>
<l>*     reduce_domain (Image, Yellow, ImageReduced)</l>
<l>*     dev_display (HueHighSaturation)</l>
<l>*     dev_display (ImageReduced)</l>
<l>*     stop ()</l>
<l>* endfor</l>
<c></c>
<c>** eg1.1 选取黄色区域//OK</c>
<c></c>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, 640, 480, 'black', WindowHandle)</l>
<c></c>
<l>read_image (Image, 'led1')</l>
<l>decompose3 (Image, Red, Green, Blue)</l>
<l>trans_from_rgb (Red, Green, Blue, Hue, Saturation, Intensity, 'hsv')</l>
<c>*对饱和度图像进行二值化</c>
<l>threshold (Saturation, HighSaturation, 100, 255)</l>
<c>*在色调图像中抠图</c>
<l>reduce_domain (Hue, HighSaturation, HueHighSaturation)</l>
<l>threshold (HueHighSaturation, Yellow, 20, 50)</l>
<l>connection (Yellow, ConnectedRegions)</l>
<c>*根据形状选择，‘max_area’为选择面积最大的连通域</c>
<l>select_shape_std (ConnectedRegions, SelectedRegions, 'max_area', 70)</l>
<l>closing_circle (SelectedRegions, Yellow, 3.5)</l>
<l>smallest_circle (SelectedRegions, Row, Column, Radius)</l>
<l>gen_circle(Circles,Row,Column,Radius)</l>
<c>** reduce_domain (Image, Yellow, ImageReduced)</c>
<l>reduce_domain (Image, Circles, ImageReduced)</l>
<l>dev_display (HueHighSaturation)</l>
<l>dev_display (ImageReduced)</l>
<l>stop ()</l>
<c></c>
<c>** eg 1.2 根据圆和比例选取LED区域</c>
<c>** 初始化设备尺度参数</c>
<l>watch_r := Radius</l>
<l>watch_x := Column</l>
<l>watch_y := Row</l>
<c></c>
<l>led_width := 0.9 * watch_r</l>
<l>led_height := 0.5 * watch_r</l>
<c></c>
<c></c>
<l>led_x1 := watch_x - 0.7*led_width</l>
<l>led_y1 := watch_y - led_height</l>
<c></c>
<l>led_x2 := Column + 0.7*led_width</l>
<l>led_y2 := watch_y </l>
<c>**</c>
<c></c>
<c></c>
<l>gen_rectangle1(Rectangle, led_y1,led_x1, led_y2, led_x2 )</l>
<c></c>
<c></c>
<c></c>
<c></c>
<c>** eg1.2 最小外接圆样例//OK</c>
<l>* read_image(Image,'fabrik')</l>
<l>* regiongrowing(Image,Regions,5,5,6,100)</l>
<l>* select_shape(Regions,SelectedRegions,'area','and',100,2000)</l>
<l>* smallest_circle(SelectedRegions,Row,Column,Radius)</l>
<l>* gen_circle(Circles,Row,Column,Radius)</l>
<l>* dev_display (Circles)</l>
<c></c>
<c>** eg3 选取红红色区域//???</c>
<c></c>
<l>* dev_close_window ()</l>
<l>* dev_open_window (0, 0, 640, 480, 'black', WindowHandle)</l>
<c></c>
<l>* read_image (Image, 'led1')</l>
<l>* decompose3 (Image, Red, Green, Blue)</l>
<l>* trans_from_rgb (Red, Green, Blue, Hue, Saturation, Intensity, 'hsv')</l>
<c>*对饱和度图像进行二值化</c>
<l>* threshold (Saturation, HighSaturation, 100, 255)</l>
<c>*在色调图像中抠图</c>
<l>* reduce_domain (Hue, HighSaturation, HueHighSaturation)</l>
<l>* threshold (HueHighSaturation, Yellow, 20, 50)</l>
<l>* connection (Yellow, ConnectedRegions)</l>
<c>*根据形状选择，‘max_area’为选择面积最大的连通域</c>
<l>* select_shape_std (ConnectedRegions, SelectedRegions, 'max_area', 70)</l>
<l>* closing_circle (SelectedRegions, Yellow, 3.5)</l>
<l>* reduce_domain (Image, Yellow, ImageReduced)</l>
<l>* dev_display (HueHighSaturation)</l>
<l>* dev_display (ImageReduced)</l>
<l>* stop ()</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>

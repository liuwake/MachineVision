<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.1.1">
<procedure name="main">
<interface/>
<body>
<c as_id="ocr" as_name="OCR 01" as_grp="[1,1]" as_ord="1">* OCR 01: Code generated by OCR 01</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,1]" as_ord="1">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,1]" as_ord="2">* OCR 01: Prepare text model</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,1]" as_ord="3">* OCR 01: </c>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,1]" as_ord="4">create_text_model_reader ('manual', [], TextModel)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="1">set_text_model_param (TextModel, 'manual_polarity', 'light_on_dark')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="2">set_text_model_param (TextModel, 'manual_char_width', 18)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="3">set_text_model_param (TextModel, 'manual_char_height', 32)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="4">set_text_model_param (TextModel, 'manual_stroke_width', 3.2)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="5">set_text_model_param (TextModel, 'manual_return_punctuation', 'false')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="6">set_text_model_param (TextModel, 'manual_return_separators', 'false')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="7">set_text_model_param (TextModel, 'manual_uppercase_only', 'true')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="8">set_text_model_param (TextModel, 'manual_fragment_size_min', 5)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="9">set_text_model_param (TextModel, 'manual_eliminate_border_blobs', 'true')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="10">set_text_model_param (TextModel, 'manual_base_line_tolerance', 0.2)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,2]" as_ord="11">set_text_model_param (TextModel, 'manual_max_line_num', 1)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,3]" as_ord="1">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,3]" as_ord="2">* OCR 01: Load classifier</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[2,3]" as_ord="3">* OCR 01: </c>
<l as_id="ocr" as_name="OCR 01" as_grp="[2,3]" as_ord="4">read_ocr_class_mlp ('Industrial_0-9_NoRej.omc', OcrHandle)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="1">* OCR 01: ***************************************************************</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="2">* OCR 01: * The code which follows is to be executed once / image       *</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="3">* OCR 01: ***************************************************************</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="4">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="5">* OCR 01: Load image</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[3,1]" as_ord="6">read_image (Image, 'C:/Users/iwake/OneDrive - wake/Desktop/Vision/VisionProj/Led/led1.jpg')</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,1]" as_ord="1">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,1]" as_ord="2">* OCR 01: Perform actual processing (once per ROI)</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="1">* OCR 01: Generate regions of interest</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,2]" as_ord="1">gen_rectangle1 (ROI_OCR_01_0, 124.685, 302.511, 159.685, 407.511)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="1">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="2">* OCR 01: Extract symbol regions (segmentation step)</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="3">* OCR 01: Only consider first channel for color images</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="4">access_channel (Image, TmpObj_Mono, 1)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="5">reduce_domain (TmpObj_Mono, ROI_OCR_01_0, TmpObj_MonoReduced_OCR_01_0)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="6">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="7">* OCR 01: Orientation Correction (for consistent border and domain</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="8">* OCR 01: handling, this is always applied, even with no rotation)</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="9">* OCR 01: </c>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="10">hom_mat2d_identity (TmpCtrl_MatrixIdentity)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="11">* OCR 01: Apply transformation to image and domain</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="12">get_domain (TmpObj_MonoReduced_OCR_01_0, TmpObj_Domain)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="13">get_system ('clip_region', TmpCtrl_ClipRegion)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="14">set_system ('clip_region', 'false')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="15">dilation_circle (TmpObj_Domain, TmpObj_DomainExpanded, 16)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="16">affine_trans_region (TmpObj_DomainExpanded, TmpObj_DomainTransformedRaw, TmpCtrl_MatrixIdentity, 'true')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="17">smallest_rectangle1 (TmpObj_DomainTransformedRaw, TmpCtrl_Row1, TmpCtrl_Col1, TmpCtrl_Row2, TmpCtrl_Col2)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="18">hom_mat2d_translate (TmpCtrl_MatrixIdentity, -TmpCtrl_Row1, -TmpCtrl_Col1, TmpCtrl_MatrixTranslation)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="19">hom_mat2d_compose (TmpCtrl_MatrixTranslation, TmpCtrl_MatrixIdentity, TmpCtrl_MatrixComposite)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="20">affine_trans_region (TmpObj_Domain, TmpObj_DomainTransformed, TmpCtrl_MatrixComposite, 'true')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="21">affine_trans_image (TmpObj_MonoReduced_OCR_01_0, TmpObj_ImageTransformed, TmpCtrl_MatrixComposite, 'constant', 'true')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="22">dilation_circle (TmpObj_Domain, TmpObj_DomainExpanded, 16)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="23">expand_domain_gray (TmpObj_ImageTransformed, TmpObj_ImageTransformedExpanded, 16)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="24">reduce_domain (TmpObj_ImageTransformed, TmpObj_DomainTransformed, TmpObj_ImageTransformedReduced)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="25">crop_part (TmpObj_ImageTransformedReduced, TmpObj_MonoReduced_OCR_01_0, 0, 0, TmpCtrl_Col2-TmpCtrl_Col1+1, TmpCtrl_Row2-TmpCtrl_Row1+1)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="26">set_system ('clip_region', TmpCtrl_ClipRegion)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,3]" as_ord="27">find_text (TmpObj_MonoReduced_OCR_01_0, TextModel, TmpCtrl_ResultHandle_OCR_01_0)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="1">* OCR 01: </c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="2">* OCR 01: Read text (classification step)</c>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="3">* OCR 01: Gray values for reading must be dark on bright</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="4">invert_image (TmpObj_MonoReduced_OCR_01_0, TmpObj_MonoInverted_OCR_01_0)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="5">TmpCtrl_Expressions := ['^[0-9][0-9][0-9][0-9]$']</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="6">get_text_result (TmpCtrl_ResultHandle_OCR_01_0, 'manual_num_lines', TmpCtrl_NumLines)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="7">for TmpCtrl_LineIndex := 0 to TmpCtrl_NumLines - 1 by 1</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="8">    get_text_object (Symbols_OCR_01_0, TmpCtrl_ResultHandle_OCR_01_0, ['manual_line', TmpCtrl_LineIndex])</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="9">    dev_display (TmpObj_MonoInverted_OCR_01_0)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="10">    dev_set_draw ('fill')</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="11">    dev_set_colored (3)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="12">    dev_display (Symbols_OCR_01_0)</l>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="13">    do_ocr_word_mlp (Symbols_OCR_01_0, TmpObj_MonoInverted_OCR_01_0, OcrHandle, TmpCtrl_Expressions[TmpCtrl_LineIndex % 1], 3, 2, SymbolNames_OCR_01_0, Confidences_OCR_01_0, Words_OCR_01_0, Scores_OCR_01_0)</l>
<c as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="14">    * OCR 01: Do something with the results</c>
<l as_id="ocr" as_name="OCR 01" as_grp="[4,4]" as_ord="15">endfor</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
